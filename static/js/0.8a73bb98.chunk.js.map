{"version":3,"file":"static/js/0.8a73bb98.chunk.js","mappings":"oMACA,EAAwB,2BAAxB,EAAiH,gCAAjH,EAA4J,8BAA5J,EAAuM,gCAAvM,EAAoP,gC,uCCKrO,SAASA,IAEpB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACjB,MAAwBA,EAAEC,OAAlBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MAEd,OAAQZ,GACJ,IAAK,OACDC,EAAQW,GACR,MACJ,IAAK,SACDT,EAAUS,GACV,MACJ,QACI,SAoBR,OACI,4BACI,cAAGC,UAAWC,EAAd,wBACA,kBAAMC,SAnBG,SAAAC,GAKvB,GAJMA,EAAMC,kBACab,EAASc,MAAK,SAAAC,GACtC,OAAOA,EAAQnB,KAAKoB,gBAAkBpB,EAAKoB,iBAMlC,OAHAb,GAASc,EAAAA,EAAAA,IAAY,CAAErB,KAAAA,EAAME,OAAAA,KAC7BD,EAAQ,SACRE,EAAU,IAGdmB,MAAM,GAAD,OAAItB,EAAJ,6BAQiCa,UAAWC,EAAzC,WACI,cAAGD,UAAWC,EAAd,mBACA,kBACIS,KAAK,OACLvB,KAAK,OACLwB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRd,MAAOZ,EACP2B,SAAUlB,EACVI,UAAWC,KAEf,cAAGD,UAAWC,EAAd,qBACA,kBACIS,KAAK,MACLvB,KAAK,SACLwB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRd,MAAOV,EACPyB,SAAUlB,EACVI,UAAWC,KAEf,mBAAQS,KAAK,SAASV,UAAWC,EAAjC,+B,cCrEpB,EAA8B,4BAA9B,EAAwE,4BCIzD,SAASc,IACpB,IAAMhB,GAAQP,EAAAA,EAAAA,IAAYwB,EAAAA,IACpBtB,GAAWC,EAAAA,EAAAA,MAIjB,OACI,8BACI,cAAGK,UAAWC,EAAd,oCACA,kBACIS,KAAK,OACLX,MAAOA,EACPe,SATK,SAAAjB,GAAC,OACdH,GAASuB,EAAAA,EAAAA,GAAmBpB,EAAEC,OAAOC,SAS7BC,UAAWC,OCjB3B,OAAgB,MAAQ,4BAA4B,kBAAoB,wCAAwC,YAAc,kCAAkC,oBAAsB,2C,oBCUvK,SAASiB,IACpB,IAAM3B,GAAWC,EAAAA,EAAAA,IAAY2B,EAAAA,IACvBzB,GAAWC,EAAAA,EAAAA,MACXyB,GAAWC,EAAAA,EAAAA,MACXC,GAAW9B,EAAAA,EAAAA,IAAY+B,EAAAA,IAgB7B,OAVAC,EAAAA,EAAAA,YAAU,WACN,IAAKF,EACD,OAAOF,EAAS,aAErB,CAACE,EAAUF,KAEdI,EAAAA,EAAAA,YAAU,WACN9B,GAAS+B,EAAAA,EAAAA,SACV,CAAC/B,KAGA,eAAIM,UAAWC,EAAAA,YAAf,SACKV,EAASmC,KAAI,gBAAGC,EAAH,EAAGA,GAAIxC,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACV,gBAEIW,UAAWC,EAAAA,kBAFf,WAII,kBAAMD,UAAWC,EAAAA,kBAAjB,UAAuCd,EAAvC,SACA,iBAAMa,UAAWC,EAAAA,kBAAjB,SAAuCZ,KAEvC,mBACIqB,KAAK,SACLV,UAAWC,EAAAA,oBACX2B,QAAS,kBA5BL,SAAAD,GAEpBjC,GAASmC,EAAAA,EAAAA,IAAeF,IA0BOG,CAAgBH,IAHnC,sBANKA,QC/BV,SAASI,IACpB,OACI,gCACI,SAAC9C,EAAD,KACA,SAAC8B,EAAD,KACA,SAACG,EAAD","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.js","views/PhonebookPage/PhonebookPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactForm_title__jZguf\",\"contactField\":\"ContactForm_contactField__Snooa\",\"inputTitle\":\"ContactForm_inputTitle__Gmsiy\",\"formFild\":\"ContactForm_formFild__steUR\",\"formButton\":\"ContactForm_formButton__TN6Jq\",\"inputField\":\"ContactForm_inputField__qJkou\"};","import s from './ContactForm.module.css'\nimport { useState } from 'react';\nimport { useDispatch, useSelector  } from 'react-redux';\nimport { addContacts, getContacts } from '../../redux/phonebook/selectors';\n\n\nexport default function ContactForm() {\n    \n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const contacts = useSelector(getContacts);\n    const dispatch = useDispatch();\n       \n    const handleChange = e => {\n        const { name, value } = e.target;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break\n            default:\n                return;\n        }\n    }\n    \n    const handleSubmit = event => { \n        event.preventDefault();\n        const repeatName = contacts.find(contact => {\n\t\t\treturn contact.name.toLowerCase() === name.toLowerCase();\n\t\t});\n\t\tif (!repeatName) {\n            dispatch(addContacts({ name, number }));\n            setName('')\n            setNumber('')\n            return\n        }\n        alert(`${name} is already in contacts`);\n\t\t\treturn;\n    }\n\n    \n        return (\n            <div>\n                <p className={s.title}>Phonebook</p>\n                <form onSubmit={handleSubmit} className={s.formFild}>\n                    <p className={s.inputTitle}>Name</p>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        value={name}\n                        onChange={handleChange}\n                        className={s.inputField}\n                    />\n                    <p className={s.inputTitle}>Number</p>\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        value={number}\n                        onChange={handleChange}\n                        className={s.inputField}\n                    />\n                    <button type=\"submit\" className={s.formButton}>Add contact</button>\n                </form>\n            </div>\n        );\n    }\n\n","// extracted by mini-css-extract-plugin\nexport default {\"filterTitle\":\"Filter_filterTitle__5SDqd\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useDispatch, useSelector } from 'react-redux'\nimport { filterChangeAction } from '../../redux/phonebook/actions';\nimport { getFilter } from '../../redux/phonebook/selectors'\nimport s from './Filter.module.css'\n\nexport default function Filter () { \n    const value = useSelector(getFilter);\n    const dispatch = useDispatch();\n    const onChange = e =>\n        dispatch(filterChangeAction(e.target.value));\n    \n    return (\n        <label >\n            <p className={s.filterTitle}>Find contacts by name</p>\n            <input\n                type=\"text\"\n                value={value}\n                onChange={onChange}\n                className={s.filterInput}\n            />\n        </label>\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactsList_title__Nc-fb\",\"contactList__text\":\"ContactsList_contactList__text__YIxjD\",\"contactList\":\"ContactsList_contactList__qIIH9\",\"contactList__button\":\"ContactsList_contactList__button__Xa5sR\"};","import { useDispatch, useSelector } from 'react-redux';\nimport s from './ContactsList.module.css'\nimport {\n    deleteContacts,\n    fetchContacts,\n    getVisibleContacts\n} from '../../redux/phonebook/selectors';\nimport { useEffect } from 'react'; \nimport { useNavigate } from 'react-router-dom';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\n\nexport default function Contacts() {\n    const contacts = useSelector(getVisibleContacts);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const loggedIn = useSelector(getIsLoggedIn);\n    const onDeleteContact = id => {\n        //console.log('передали ID', id)\n        dispatch(deleteContacts(id));\n    };\n\n    useEffect(() => {\n        if (!loggedIn) {\n            return navigate('/signIn');\n        }\n    }, [loggedIn, navigate]);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <ul className={s.contactList}>\n            {contacts.map(({ id, name, number }) => (\n                <li\n                    key={id}\n                    className={s.contactList__item}>\n                    \n                    <span className={s.contactList__text}>{name}: </span>\n                    <span className={s.contactList__text}>{number}</span>\n                \n                    <button\n                        type=\"button\"\n                        className={s.contactList__button}\n                        onClick={() => onDeleteContact(id)}\n                    >\n                        Delete\n                    </button>\n                </li>\n            ))}\n        </ul>\n    );\n}","import ContactForm from \"../../components/ContactForm\";\nimport Filter from \"../../components/Filter\";\nimport ContactsList from \"../../components/ContactsList\";\n\nexport default function PhonebookPage() { \n    return (\n        <section>\n            <ContactForm />\n            <Filter />\n            <ContactsList />\n        </section>\n    );\n}"],"names":["ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","getContacts","dispatch","useDispatch","handleChange","e","target","value","className","s","onSubmit","event","preventDefault","find","contact","toLowerCase","addContacts","alert","type","pattern","title","required","onChange","Filter","getFilter","filterChangeAction","Contacts","getVisibleContacts","navigate","useNavigate","loggedIn","getIsLoggedIn","useEffect","fetchContacts","map","id","onClick","deleteContacts","onDeleteContact","PhonebookPage"],"sourceRoot":""}