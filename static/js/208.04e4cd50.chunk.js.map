{"version":3,"file":"static/js/208.04e4cd50.chunk.js","mappings":"uMACA,K,2DCOe,SAASA,IACpB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,KAE7BC,EAAAA,EAAAA,YAAU,WACN,GAAIH,EACA,OAAOF,EAAS,gBAErB,CAACA,EAAUE,IAEd,IAAMI,EAAe,SAAAC,GACjB,MAAwBA,EAAEC,OAAlBd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,MAEd,OAAQf,GACJ,IAAK,QACDD,EAASgB,GACT,MACJ,IAAK,WACDZ,EAAYY,GACZ,MACJ,IAAK,OACDd,EAAQc,GACR,MACJ,QACI,SAYZ,OACI,8BACI,kBAAMC,UAAWC,EAAAA,cAAiBC,SAVvB,SAAAL,GACfA,EAAEM,iBACFf,GAASgB,EAAAA,EAAAA,IAAO,CAAEtB,MAAAA,EAAOI,SAAAA,EAAUF,KAAAA,KACnCD,EAAS,IACTE,EAAQ,IACRE,EAAY,KAKR,WACI,iBAAKa,UAAWC,EAAAA,SAAhB,WACI,mBAAOD,UAAWC,EAAAA,MAAlB,mBACS,iBAAMD,UAAWC,EAAAA,SAAjB,mBAET,kBACID,UAAWC,EAAAA,MACXF,MAAOf,EACPqB,SAAUT,EACVU,KAAK,OACLtB,KAAK,OACLuB,UAAQ,QAGhB,iBAAKP,UAAWC,EAAAA,SAAhB,WACI,mBAAOD,UAAWC,EAAAA,MAAlB,mBACS,iBAAMD,UAAWC,EAAAA,SAAjB,mBAET,kBACID,UAAWC,EAAAA,MACXF,MAAOjB,EACPuB,SAAUT,EACVU,KAAK,QACLtB,KAAK,QACLuB,UAAQ,QAGhB,iBAAKP,UAAWC,EAAAA,SAAhB,WACI,mBAAOD,UAAWC,EAAAA,MAAlB,sBACY,iBAAMD,UAAWC,EAAAA,SAAjB,mBAEZ,kBACID,UAAWC,EAAAA,MACXF,MAAOb,EACPmB,SAAUT,EACVU,KAAK,WACLtB,KAAK,WACLwB,MAAM,YACND,UAAQ,QAGhB,gBAAKP,UAAU,cAAf,UACI,mBAAQA,UAAWC,EAAAA,UAAaK,KAAK,SAArC","sources":["views/SignUpPage/SignUpPage.module.css","views/SignUpPage/SignUpPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import s from './SignUpPage.module.css';\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from '../../redux/auth/auth-operations';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nexport default function SignUpPage() {\n    const [email, setEmail] = useState('');\n    const [name, setName] = useState('');\n    const [password, setPassword] = useState('');\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const loggedIn = useSelector(getIsLoggedIn);\n\n    useEffect(() => {\n        if (loggedIn) {\n            return navigate('/phonebook');\n        }\n    }, [navigate, loggedIn]);\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n\n        switch (name) {\n            case 'email':\n                setEmail(value);\n                break;\n            case 'password':\n                setPassword(value);\n                break;\n            case 'name':\n                setName(value);\n                break;\n            default:\n                return;\n        }\n    };\n\n    const formSubmit = e => {\n        e.preventDefault();\n        dispatch(signUp({ email, password, name }));\n        setEmail('');\n        setName('');\n        setPassword('');\n    };\n\n    return (\n        <section>\n            <form className={s.phonebookForm} onSubmit={formSubmit}>\n                <div className={s.inputBox}>\n                    <label className={s.label}>\n                        Login<span className={s.required}>*</span>\n                    </label>\n                    <input\n                        className={s.input}\n                        value={name}\n                        onChange={handleChange}\n                        type='text'\n                        name='name'\n                        required\n                    />\n                </div>\n                <div className={s.inputBox}>\n                    <label className={s.label}>\n                        Email<span className={s.required}>*</span>\n                    </label>\n                    <input\n                        className={s.input}\n                        value={email}\n                        onChange={handleChange}\n                        type='email'\n                        name='email'\n                        required\n                    />\n                </div>\n                <div className={s.inputBox}>\n                    <label className={s.label}>\n                        Password<span className={s.required}>*</span>\n                    </label>\n                    <input\n                        className={s.input}\n                        value={password}\n                        onChange={handleChange}\n                        type='password'\n                        name='password'\n                        title='minimum 7'\n                        required\n                    />\n                </div>\n                <div className='s.buttonBox'>\n                    <button className={s.addButton} type=\"submit\">\n                        Create\n                    </button>\n                </div>\n            </form>\n        </section>\n    )\n}"],"names":["SignUpPage","useState","email","setEmail","name","setName","password","setPassword","dispatch","useDispatch","navigate","useNavigate","loggedIn","useSelector","getIsLoggedIn","useEffect","handleChange","e","target","value","className","s","onSubmit","preventDefault","signUp","onChange","type","required","title"],"sourceRoot":""}